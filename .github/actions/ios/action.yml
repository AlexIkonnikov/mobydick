name: Ios
description: 'Build ios'

inputs:
  EXPORT_OPTIONS:
    description: EXPORT_OPTIONS
    required: true
  IOS_SCHEME:
    description: IOS_SCHEME
    required: true
  APP_STORE_API_ISSUER:
    description: APP_STORE_API_ISSUER
    required: true
  APP_STORE_API_KEY:
    description: MYAPP_UPLOAD_STORE_PASSWORD
    required: true


runs:
  using: "composite"
  steps:
    - name: prepare
      shell: bash
      env:
        EXPORT_OPTIONS: ${{ inputs.EXPORT_OPTIONS }}
      run: |
        cd ./${CUSTOM_DIR}/ios
        NO_FLIPPER=1 pod install
        echo ${EXPORT_OPTIONS} > ExportOptions.plist
    - name: archive
      shell: bash
      env:
        IOS_SCHEME: ${{ inputs.IOS_SCHEME }}
        APP_STORE_API_ISSUER: ${{ inputs.APP_STORE_API_ISSUER }}
        APP_STORE_API_KEY: ${{ inputs.APP_STORE_API_KEY }}
      run: |
        xcodebuild -workspace ${IOS_SCHEME}.xcworkspace -scheme $IOS_SCHEME -sdk iphoneos archive -archivePath ${PWD}/build/${IOS_SCHEME}.xcarchive -allowProvisioningUpdates -quiet
    - name: exportArchive
      shell: bash
      env:
        IOS_SCHEME: ${{ inputs.IOS_SCHEME }}
        APP_STORE_API_ISSUER: ${{ inputs.APP_STORE_API_ISSUER }}
        APP_STORE_API_KEY: ${{ inputs.APP_STORE_API_KEY }}
      run: |
        xcodebuild -exportArchive -archivePath ${PWD}/build/${IOS_SCHEME}.xcarchive -exportOptionsPlist ${PWD}/ExportOptions.plist -exportPath $PWD/build -authenticationKeyIssuerID $APP_STORE_API_ISSUER -authenticationKeyID $APP_STORE_API_KEY -allowProvisioningUpdates -quiet
    - name: publish
      shell: bash
      env:
        APP_STORE_API_ISSUER: ${{ inputs.APP_STORE_API_ISSUER }}
        APP_STORE_API_KEY: ${{ inputs.APP_STORE_API_KEY }}
      run: |
        xcrun altool --upload-app -f ./build/*.ipa -t ios --apiKey $APP_STORE_API_KEY --apiIssuer $APP_STORE_API_ISSUER
