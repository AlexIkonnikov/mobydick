// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`@npm/mobydick-core/modalBase should renders correctly HorizontalButtonsView destructive  1`] = `
<View
  style={
    Object {
      "flexDirection": "row",
      "paddingTop": 60,
    }
  }
>
  <View
    accessibilityState={
      Object {
        "disabled": false,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "alignSelf": "stretch",
        "backgroundColor": "#F54D3D",
        "borderRadius": 36,
        "flex": 1,
        "flexDirection": "row",
        "justifyContent": "center",
        "marginRight": 18,
        "minHeight": 144,
        "opacity": 1,
      }
    }
  >
    <Text
      allowFontScaling={true}
      style={
        Array [
          Object {
            "color": "#FFF",
            "fontFamily": "Inter-SemiBold",
            "fontSize": 54,
            "lineHeight": 66,
          },
          Array [
            Object {
              "color": "#FFF",
              "paddingHorizontal": 18,
            },
            undefined,
          ],
        ]
      }
    >
      textLeft
    </Text>
  </View>
  <View
    accessibilityState={
      Object {
        "disabled": false,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "alignSelf": "stretch",
        "backgroundColor": "#F54D3D",
        "borderRadius": 36,
        "flex": 1,
        "flexDirection": "row",
        "justifyContent": "center",
        "marginLeft": 18,
        "minHeight": 144,
        "opacity": 1,
      }
    }
  >
    <Text
      allowFontScaling={true}
      style={
        Array [
          Object {
            "color": "#FFF",
            "fontFamily": "Inter-SemiBold",
            "fontSize": 54,
            "lineHeight": 66,
          },
          Array [
            Object {
              "color": "#FFF",
              "paddingHorizontal": 18,
            },
            undefined,
          ],
        ]
      }
    >
      textRight
    </Text>
  </View>
</View>
`;

exports[`@npm/mobydick-core/modalBase should renders correctly HorizontalButtonsView primary  1`] = `
<View
  style={
    Object {
      "flexDirection": "row",
      "paddingTop": 60,
    }
  }
>
  <View
    accessibilityState={
      Object {
        "disabled": false,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "alignSelf": "stretch",
        "backgroundColor": "#2B78EE",
        "borderRadius": 36,
        "flex": 1,
        "flexDirection": "row",
        "justifyContent": "center",
        "marginRight": 18,
        "minHeight": 144,
        "opacity": 1,
      }
    }
  >
    <Text
      allowFontScaling={true}
      style={
        Array [
          Object {
            "color": "#FFF",
            "fontFamily": "Inter-SemiBold",
            "fontSize": 54,
            "lineHeight": 66,
          },
          Array [
            Object {
              "color": "#FFF",
              "paddingHorizontal": 18,
            },
            undefined,
          ],
        ]
      }
    >
      textLeft
    </Text>
  </View>
  <View
    accessibilityState={
      Object {
        "disabled": false,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "alignSelf": "stretch",
        "backgroundColor": "#2B78EE",
        "borderRadius": 36,
        "flex": 1,
        "flexDirection": "row",
        "justifyContent": "center",
        "marginLeft": 18,
        "minHeight": 144,
        "opacity": 1,
      }
    }
  >
    <Text
      allowFontScaling={true}
      style={
        Array [
          Object {
            "color": "#FFF",
            "fontFamily": "Inter-SemiBold",
            "fontSize": 54,
            "lineHeight": 66,
          },
          Array [
            Object {
              "color": "#FFF",
              "paddingHorizontal": 18,
            },
            undefined,
          ],
        ]
      }
    >
      textRight
    </Text>
  </View>
</View>
`;

exports[`@npm/mobydick-core/modalBase should renders correctly HorizontalButtonsView secondary  1`] = `
<View
  style={
    Object {
      "flexDirection": "row",
      "paddingTop": 60,
    }
  }
>
  <View
    accessibilityState={
      Object {
        "disabled": false,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "alignSelf": "stretch",
        "backgroundColor": "rgba(43, 120, 238, 0.15)",
        "borderRadius": 36,
        "flex": 1,
        "flexDirection": "row",
        "justifyContent": "center",
        "marginRight": 18,
        "minHeight": 144,
        "opacity": 1,
      }
    }
  >
    <Text
      allowFontScaling={true}
      style={
        Array [
          Object {
            "color": "#FFF",
            "fontFamily": "Inter-SemiBold",
            "fontSize": 54,
            "lineHeight": 66,
          },
          Array [
            Object {
              "color": "#2B78EE",
              "paddingHorizontal": 18,
            },
            undefined,
          ],
        ]
      }
    >
      textLeft
    </Text>
  </View>
  <View
    accessibilityState={
      Object {
        "disabled": false,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "alignSelf": "stretch",
        "backgroundColor": "rgba(43, 120, 238, 0.15)",
        "borderRadius": 36,
        "flex": 1,
        "flexDirection": "row",
        "justifyContent": "center",
        "marginLeft": 18,
        "minHeight": 144,
        "opacity": 1,
      }
    }
  >
    <Text
      allowFontScaling={true}
      style={
        Array [
          Object {
            "color": "#FFF",
            "fontFamily": "Inter-SemiBold",
            "fontSize": 54,
            "lineHeight": 66,
          },
          Array [
            Object {
              "color": "#2B78EE",
              "paddingHorizontal": 18,
            },
            undefined,
          ],
        ]
      }
    >
      textRight
    </Text>
  </View>
</View>
`;

exports[`@npm/mobydick-core/modalBase should renders correctly HorizontalButtonsView tertiary  1`] = `
<View
  style={
    Object {
      "flexDirection": "row",
      "paddingTop": 60,
    }
  }
>
  <View
    accessibilityState={
      Object {
        "disabled": false,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "alignSelf": "stretch",
        "backgroundColor": "transparent",
        "borderRadius": 36,
        "flex": 1,
        "flexDirection": "row",
        "justifyContent": "center",
        "marginRight": 18,
        "minHeight": 144,
        "opacity": 1,
      }
    }
  >
    <Text
      allowFontScaling={true}
      style={
        Array [
          Object {
            "color": "#FFF",
            "fontFamily": "Inter-SemiBold",
            "fontSize": 54,
            "lineHeight": 66,
          },
          Array [
            Object {
              "color": "#2B78EE",
              "paddingHorizontal": 18,
            },
            undefined,
          ],
        ]
      }
    >
      textLeft
    </Text>
  </View>
  <View
    accessibilityState={
      Object {
        "disabled": false,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "alignSelf": "stretch",
        "backgroundColor": "transparent",
        "borderRadius": 36,
        "flex": 1,
        "flexDirection": "row",
        "justifyContent": "center",
        "marginLeft": 18,
        "minHeight": 144,
        "opacity": 1,
      }
    }
  >
    <Text
      allowFontScaling={true}
      style={
        Array [
          Object {
            "color": "#FFF",
            "fontFamily": "Inter-SemiBold",
            "fontSize": 54,
            "lineHeight": 66,
          },
          Array [
            Object {
              "color": "#2B78EE",
              "paddingHorizontal": 18,
            },
            undefined,
          ],
        ]
      }
    >
      textRight
    </Text>
  </View>
</View>
`;
