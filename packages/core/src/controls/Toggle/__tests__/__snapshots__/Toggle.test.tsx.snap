// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Toggle should renders correctly active 1`] = `
<View
  accessibilityState={
    Object {
      "disabled": false,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
>
  <View
    collapsable={false}
    needsOffscreenAlphaCompositing={true}
    style={
      Object {
        "backgroundColor": "rgba(43, 120, 238, 1)",
        "borderRadius": 60,
        "height": 90,
        "opacity": 1,
        "padding": 6,
        "width": 150,
      }
    }
  >
    <View
      collapsable={false}
      style={
        Object {
          "aspectRatio": 1,
          "backgroundColor": "#FFF",
          "borderRadius": 75,
          "flex": 1,
          "transform": Array [
            Object {
              "translateX": 60,
            },
          ],
        }
      }
    />
  </View>
</View>
`;

exports[`Toggle should renders correctly active and disabled 1`] = `
<View
  accessibilityState={
    Object {
      "disabled": true,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
>
  <View
    collapsable={false}
    needsOffscreenAlphaCompositing={true}
    style={
      Object {
        "backgroundColor": "rgba(43, 120, 238, 1)",
        "borderRadius": 60,
        "height": 90,
        "opacity": 0.4,
        "padding": 6,
        "width": 150,
      }
    }
  >
    <View
      collapsable={false}
      style={
        Object {
          "aspectRatio": 1,
          "backgroundColor": "#FFF",
          "borderRadius": 75,
          "flex": 1,
          "transform": Array [
            Object {
              "translateX": 60,
            },
          ],
        }
      }
    />
  </View>
</View>
`;

exports[`Toggle should renders correctly by default 1`] = `
<View
  accessibilityState={
    Object {
      "disabled": false,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
>
  <View
    collapsable={false}
    needsOffscreenAlphaCompositing={true}
    style={
      Object {
        "backgroundColor": "rgba(155, 161, 176, 1)",
        "borderRadius": 60,
        "height": 90,
        "opacity": 1,
        "padding": 6,
        "width": 150,
      }
    }
  >
    <View
      collapsable={false}
      style={
        Object {
          "aspectRatio": 1,
          "backgroundColor": "#FFF",
          "borderRadius": 75,
          "flex": 1,
          "transform": Array [
            Object {
              "translateX": 0,
            },
          ],
        }
      }
    />
  </View>
</View>
`;

exports[`Toggle should renders correctly disabled 1`] = `
<View
  accessibilityState={
    Object {
      "disabled": true,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
>
  <View
    collapsable={false}
    needsOffscreenAlphaCompositing={true}
    style={
      Object {
        "backgroundColor": "rgba(155, 161, 176, 1)",
        "borderRadius": 60,
        "height": 90,
        "opacity": 0.4,
        "padding": 6,
        "width": 150,
      }
    }
  >
    <View
      collapsable={false}
      style={
        Object {
          "aspectRatio": 1,
          "backgroundColor": "#FFF",
          "borderRadius": 75,
          "flex": 1,
          "transform": Array [
            Object {
              "translateX": 0,
            },
          ],
        }
      }
    />
  </View>
</View>
`;
