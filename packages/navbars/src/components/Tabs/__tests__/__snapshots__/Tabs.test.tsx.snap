// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Tabs render correctly 1`] = `
<RCTScrollView
  contentContainerStyle={
    Array [
      Object {
        "alignItems": "center",
        "paddingHorizontal": 30,
        "paddingVertical": 12,
      },
      undefined,
    ]
  }
  data={
    Array [
      Object {
        "onPress": [Function],
        "value": "1",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  horizontal={true}
  keyExtractor={[Function]}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  showsHorizontalScrollIndicator={false}
  stickyHeaderIndices={Array []}
  style={
    Array [
      Object {
        "flex": 1,
        "maxWidth": "100%",
      },
      undefined,
    ]
  }
  viewabilityConfigCallbackPairs={Array []}
>
  <View>
    <View
      onLayout={[Function]}
      style={
        Array [
          Object {
            "flexDirection": "row",
          },
          null,
        ]
      }
    >
      <View
        accessibilityLabel="tab"
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#2B78EE",
            "borderRadius": 12,
            "flexDirection": "row",
            "marginRight": 12,
            "opacity": 1,
            "paddingHorizontal": 18,
            "paddingVertical": 9,
          }
        }
      >
        <Text
          allowFontScaling={true}
          style={
            Array [
              Object {
                "color": "#FFF",
                "fontFamily": "Inter-Regular",
                "fontSize": 21,
                "lineHeight": 27,
              },
              undefined,
            ]
          }
        >
          1
        </Text>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Tabs render correctly with props 1`] = `
<RCTScrollView
  contentContainerStyle={
    Array [
      Object {
        "alignItems": "center",
        "paddingHorizontal": 30,
        "paddingVertical": 12,
      },
      Object {
        "flex": 1,
      },
    ]
  }
  data={
    Array [
      Object {
        "onPress": [Function],
        "value": "1",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  horizontal={true}
  keyExtractor={[Function]}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  showsHorizontalScrollIndicator={false}
  stickyHeaderIndices={Array []}
  style={
    Array [
      Object {
        "flex": 1,
        "maxWidth": "100%",
      },
      Object {
        "flex": 2,
      },
    ]
  }
  viewabilityConfigCallbackPairs={Array []}
>
  <View>
    <View
      onLayout={[Function]}
      style={
        Array [
          Object {
            "flexDirection": "row",
          },
          null,
        ]
      }
    >
      <View
        accessibilityLabel="tab"
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#000",
            "borderRadius": 12,
            "flexDirection": "row",
            "marginRight": 12,
            "opacity": 1,
            "paddingHorizontal": 18,
            "paddingVertical": 9,
          }
        }
      >
        <Text
          allowFontScaling={true}
          style={
            Array [
              Object {
                "color": "#F54D3D",
                "fontFamily": "Inter-Regular",
                "fontSize": 42,
                "lineHeight": 48,
              },
              undefined,
            ]
          }
        >
          1
        </Text>
      </View>
    </View>
  </View>
</RCTScrollView>
`;
