// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`@npm/mobydick-inputs/Selector Selector custom flatList styles 1`] = `
<View
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {
        "alignItems": "center",
        "backgroundColor": "rgba(32, 36, 45, 0.60)",
        "height": "100%",
        "justifyContent": "flex-end",
        "position": "absolute",
        "width": "100%",
      },
      Object {
        "backgroundColor": "transparent",
      },
    ]
  }
  testID="Pressable"
>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "#EEEFF1",
          "borderColor": "rgba(32, 36, 45, 0.15)",
          "borderRadius": 18,
          "borderWidth": 1,
          "paddingVertical": 12,
          "position": "absolute",
        },
        Object {
          "width": 2,
        },
        Object {
          "width": 2,
        },
        Object {
          "top": 79,
        },
        Object {
          "maxHeight": 366,
        },
      ]
    }
  >
    <RCTScrollView
      bounces={false}
      data={
        Array [
          Object {
            "label": "list",
            "value": "list",
          },
        ]
      }
      getItem={[Function]}
      getItemCount={[Function]}
      keyExtractor={[Function]}
      onContentSizeChange={[Function]}
      onLayout={[Function]}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      viewabilityConfigCallbackPairs={Array []}
    >
      <View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            accessibilityLabel="list"
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "justifyContent": "center",
                  "paddingHorizontal": 18,
                  "paddingVertical": 12,
                },
                undefined,
                Object {
                  "backgroundColor": "rgba(43, 120, 238, 0.15)",
                },
              ]
            }
          >
            <Text
              allowFontScaling={true}
              style={
                Array [
                  Object {
                    "color": "#20242D",
                    "fontFamily": "Inter-Medium",
                    "fontSize": 24,
                    "lineHeight": 30,
                  },
                  undefined,
                ]
              }
            >
              list
            </Text>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
</View>
`;

exports[`@npm/mobydick-inputs/Selector render correct renderItem TouchableHighlight with custom style 1`] = `
<View
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {
        "alignItems": "center",
        "backgroundColor": "rgba(32, 36, 45, 0.60)",
        "height": "100%",
        "justifyContent": "flex-end",
        "position": "absolute",
        "width": "100%",
      },
      Object {
        "backgroundColor": "transparent",
      },
    ]
  }
  testID="Pressable"
>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "#EEEFF1",
          "borderColor": "rgba(32, 36, 45, 0.15)",
          "borderRadius": 18,
          "borderWidth": 1,
          "paddingVertical": 12,
          "position": "absolute",
        },
        undefined,
        Object {
          "width": 300,
        },
        Object {
          "top": 79,
        },
        Object {
          "maxHeight": 366,
        },
      ]
    }
  >
    <RCTScrollView
      bounces={false}
      data={
        Array [
          Object {
            "label": "list",
            "value": "list",
          },
        ]
      }
      getItem={[Function]}
      getItemCount={[Function]}
      keyExtractor={[Function]}
      onContentSizeChange={[Function]}
      onLayout={[Function]}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      viewabilityConfigCallbackPairs={Array []}
    >
      <View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            accessibilityLabel="list"
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "justifyContent": "center",
                  "paddingHorizontal": 18,
                  "paddingVertical": 12,
                },
                Object {
                  "height": 10,
                },
                Object {
                  "backgroundColor": "red",
                },
              ]
            }
          >
            <Text
              allowFontScaling={true}
              style={
                Array [
                  Object {
                    "color": "#20242D",
                    "fontFamily": "Inter-Medium",
                    "fontSize": 24,
                    "lineHeight": 30,
                  },
                  undefined,
                ]
              }
            >
              list
            </Text>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
</View>
`;

exports[`@npm/mobydick-inputs/Selector render correct renderItem Typography  with custom font  1`] = `
<View
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {
        "alignItems": "center",
        "backgroundColor": "rgba(32, 36, 45, 0.60)",
        "height": "100%",
        "justifyContent": "flex-end",
        "position": "absolute",
        "width": "100%",
      },
      Object {
        "backgroundColor": "transparent",
      },
    ]
  }
  testID="Pressable"
>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "#EEEFF1",
          "borderColor": "rgba(32, 36, 45, 0.15)",
          "borderRadius": 18,
          "borderWidth": 1,
          "paddingVertical": 12,
          "position": "absolute",
        },
        undefined,
        Object {
          "width": 300,
        },
        Object {
          "top": 79,
        },
        Object {
          "maxHeight": 366,
        },
      ]
    }
  >
    <RCTScrollView
      bounces={false}
      data={
        Array [
          Object {
            "label": "list",
            "value": "list",
          },
        ]
      }
      getItem={[Function]}
      getItemCount={[Function]}
      keyExtractor={[Function]}
      onContentSizeChange={[Function]}
      onLayout={[Function]}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      viewabilityConfigCallbackPairs={Array []}
    >
      <View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            accessibilityLabel="list"
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "justifyContent": "center",
                  "paddingHorizontal": 18,
                  "paddingVertical": 12,
                },
                undefined,
                Object {
                  "backgroundColor": "rgba(43, 120, 238, 0.15)",
                },
              ]
            }
          >
            <Text
              allowFontScaling={true}
              style={
                Array [
                  Object {
                    "color": "#20242D",
                    "fontFamily": "Inter-Medium",
                    "fontSize": 24,
                    "lineHeight": 30,
                  },
                  undefined,
                ]
              }
            >
              list
            </Text>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
</View>
`;

exports[`@npm/mobydick-inputs/Selector render correct renderItem Typography with custom style  1`] = `
<View
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {
        "alignItems": "center",
        "backgroundColor": "rgba(32, 36, 45, 0.60)",
        "height": "100%",
        "justifyContent": "flex-end",
        "position": "absolute",
        "width": "100%",
      },
      Object {
        "backgroundColor": "transparent",
      },
    ]
  }
  testID="Pressable"
>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "#EEEFF1",
          "borderColor": "rgba(32, 36, 45, 0.15)",
          "borderRadius": 18,
          "borderWidth": 1,
          "paddingVertical": 12,
          "position": "absolute",
        },
        undefined,
        Object {
          "width": 300,
        },
        Object {
          "top": 79,
        },
        Object {
          "maxHeight": 366,
        },
      ]
    }
  >
    <RCTScrollView
      bounces={false}
      data={
        Array [
          Object {
            "label": "list",
            "value": "list",
          },
        ]
      }
      getItem={[Function]}
      getItemCount={[Function]}
      keyExtractor={[Function]}
      onContentSizeChange={[Function]}
      onLayout={[Function]}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      viewabilityConfigCallbackPairs={Array []}
    >
      <View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            accessibilityLabel="list"
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "justifyContent": "center",
                  "paddingHorizontal": 18,
                  "paddingVertical": 12,
                },
                undefined,
                null,
              ]
            }
          >
            <Text
              allowFontScaling={true}
              style={
                Array [
                  Object {
                    "color": "#444B5A",
                    "fontFamily": "Inter-Regular",
                    "fontSize": 24,
                    "lineHeight": 30,
                  },
                  undefined,
                ]
              }
            >
              list
            </Text>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
</View>
`;

exports[`@npm/mobydick-inputs/Selector renders correctly  1`] = `
<View
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {
        "alignItems": "center",
        "backgroundColor": "rgba(32, 36, 45, 0.60)",
        "height": "100%",
        "justifyContent": "flex-end",
        "position": "absolute",
        "width": "100%",
      },
      Object {
        "backgroundColor": "transparent",
      },
    ]
  }
  testID="Pressable"
>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "#EEEFF1",
          "borderColor": "rgba(32, 36, 45, 0.15)",
          "borderRadius": 18,
          "borderWidth": 1,
          "paddingVertical": 12,
          "position": "absolute",
        },
        undefined,
        Object {
          "width": 300,
        },
        Object {
          "top": 79,
        },
        Object {
          "maxHeight": 366,
        },
      ]
    }
  >
    <RCTScrollView
      bounces={false}
      data={
        Array [
          Object {
            "label": "list",
            "value": "list",
          },
        ]
      }
      getItem={[Function]}
      getItemCount={[Function]}
      keyExtractor={[Function]}
      onContentSizeChange={[Function]}
      onLayout={[Function]}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      viewabilityConfigCallbackPairs={Array []}
    >
      <View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            accessibilityLabel="list"
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "justifyContent": "center",
                  "paddingHorizontal": 18,
                  "paddingVertical": 12,
                },
                undefined,
                null,
              ]
            }
          >
            <Text
              allowFontScaling={true}
              style={
                Array [
                  Object {
                    "color": "#444B5A",
                    "fontFamily": "Inter-Regular",
                    "fontSize": 24,
                    "lineHeight": 30,
                  },
                  undefined,
                ]
              }
            >
              list
            </Text>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
</View>
`;

exports[`@npm/mobydick-inputs/Selector renders correctly with bottom padding largeList 1`] = `
<View
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {
        "alignItems": "center",
        "backgroundColor": "rgba(32, 36, 45, 0.60)",
        "height": "100%",
        "justifyContent": "flex-end",
        "position": "absolute",
        "width": "100%",
      },
      Object {
        "backgroundColor": "transparent",
      },
    ]
  }
  testID="Pressable"
>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "#EEEFF1",
          "borderColor": "rgba(32, 36, 45, 0.15)",
          "borderRadius": 18,
          "borderWidth": 1,
          "paddingVertical": 12,
          "position": "absolute",
        },
        undefined,
        Object {
          "width": 300,
        },
        Object {
          "top": 79,
        },
        Object {
          "maxHeight": 366,
        },
      ]
    }
  >
    <RCTScrollView
      bounces={false}
      data={
        Array [
          Object {
            "label": "1",
            "value": "1",
          },
          Object {
            "label": "1",
            "value": "1",
          },
          Object {
            "label": "1",
            "value": "1",
          },
          Object {
            "label": "1",
            "value": "1",
          },
          Object {
            "label": "1",
            "value": "1",
          },
          Object {
            "label": "1",
            "value": "1",
          },
          Object {
            "label": "1",
            "value": "1",
          },
        ]
      }
      getItem={[Function]}
      getItemCount={[Function]}
      keyExtractor={[Function]}
      onContentSizeChange={[Function]}
      onLayout={[Function]}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      viewabilityConfigCallbackPairs={Array []}
    >
      <View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            accessibilityLabel="1"
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "justifyContent": "center",
                  "paddingHorizontal": 18,
                  "paddingVertical": 12,
                },
                undefined,
                null,
              ]
            }
          >
            <Text
              allowFontScaling={true}
              style={
                Array [
                  Object {
                    "color": "#444B5A",
                    "fontFamily": "Inter-Regular",
                    "fontSize": 24,
                    "lineHeight": 30,
                  },
                  undefined,
                ]
              }
            >
              1
            </Text>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            accessibilityLabel="1"
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "justifyContent": "center",
                  "paddingHorizontal": 18,
                  "paddingVertical": 12,
                },
                undefined,
                null,
              ]
            }
          >
            <Text
              allowFontScaling={true}
              style={
                Array [
                  Object {
                    "color": "#444B5A",
                    "fontFamily": "Inter-Regular",
                    "fontSize": 24,
                    "lineHeight": 30,
                  },
                  undefined,
                ]
              }
            >
              1
            </Text>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            accessibilityLabel="1"
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "justifyContent": "center",
                  "paddingHorizontal": 18,
                  "paddingVertical": 12,
                },
                undefined,
                null,
              ]
            }
          >
            <Text
              allowFontScaling={true}
              style={
                Array [
                  Object {
                    "color": "#444B5A",
                    "fontFamily": "Inter-Regular",
                    "fontSize": 24,
                    "lineHeight": 30,
                  },
                  undefined,
                ]
              }
            >
              1
            </Text>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            accessibilityLabel="1"
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "justifyContent": "center",
                  "paddingHorizontal": 18,
                  "paddingVertical": 12,
                },
                undefined,
                null,
              ]
            }
          >
            <Text
              allowFontScaling={true}
              style={
                Array [
                  Object {
                    "color": "#444B5A",
                    "fontFamily": "Inter-Regular",
                    "fontSize": 24,
                    "lineHeight": 30,
                  },
                  undefined,
                ]
              }
            >
              1
            </Text>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            accessibilityLabel="1"
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "justifyContent": "center",
                  "paddingHorizontal": 18,
                  "paddingVertical": 12,
                },
                undefined,
                null,
              ]
            }
          >
            <Text
              allowFontScaling={true}
              style={
                Array [
                  Object {
                    "color": "#444B5A",
                    "fontFamily": "Inter-Regular",
                    "fontSize": 24,
                    "lineHeight": 30,
                  },
                  undefined,
                ]
              }
            >
              1
            </Text>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            accessibilityLabel="1"
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "justifyContent": "center",
                  "paddingHorizontal": 18,
                  "paddingVertical": 12,
                },
                undefined,
                null,
              ]
            }
          >
            <Text
              allowFontScaling={true}
              style={
                Array [
                  Object {
                    "color": "#444B5A",
                    "fontFamily": "Inter-Regular",
                    "fontSize": 24,
                    "lineHeight": 30,
                  },
                  undefined,
                ]
              }
            >
              1
            </Text>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            accessibilityLabel="1"
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "justifyContent": "center",
                  "paddingHorizontal": 18,
                  "paddingVertical": 12,
                },
                undefined,
                null,
              ]
            }
          >
            <Text
              allowFontScaling={true}
              style={
                Array [
                  Object {
                    "color": "#444B5A",
                    "fontFamily": "Inter-Regular",
                    "fontSize": 24,
                    "lineHeight": 30,
                  },
                  undefined,
                ]
              }
            >
              1
            </Text>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
</View>
`;
